## WS Project ##

# Marshall A. Taylor #

# Required packages.
library(NLP)
library(tm)
library(RColorBrewer)
library(SnowballC)
library(ggplot2)
library(graph)
library(grid)
library(Rgraphviz)
library(pheatmap)
library(stm)
library(stmBrowser)

# Reading in and processing data.
data <- read.csv("WS_Data_Input.csv")
data$Lyrics <- gsub("[^[:alnum:]///' ]", " ", data$Lyrics)
data2 <- data
data2$Year[data2$Year=="."] <- NA
Year <- as.numeric(as.character(data2$Year))
mean(Year[1:44], na.rm=T)
data2[23, "Year"] <- 1985
data2[40, "Year"] <- 1985
mean(Year[96:112], na.rm=T)
data2[102, "Year"] <- 2004
data2$Year <- as.numeric(as.character(data2$Year))
processed2 <- textProcessor(documents=data2$Lyrics, metadata=data2, lowercase=T, 
                           removestopwords=T, removenumbers=T, removepunctuation=T, 
                           stem=T, sparselevel=1, language="en", verbose=F, 
                           onlycharacter=F, customstopwords=NULL)
out2 <- prepDocuments(processed2$documents, processed2$vocab, 
                     processed2$meta)
docs2 <- out2$documents
vocab2 <- out2$vocab
meta2 <- out2$meta

# Selecting a model (not used here).
pot_models2 <- selectModel(docs2, vocab2, K=10, prevalence =~ Band+Genre, content =~ Band, 
                          init.type="LDA", data=meta2, runs=20,
                          seed=78902)
plotModels(pot_models2)
best_fit2 <- pot_models2$runout[[Best solution here]]

# Estimating models with visualizations.
paper_model <- stm(docs2, vocab2, K=10, prevalence =~ Band+Genre, 
                           init.type="LDA", data=meta2,
                           seed=78902)
paper_model2 <- stm(docs2, vocab2, K=10, prevalence =~ Band+Genre, content =~ Band, 
                   init.type="LDA", data=meta2,
                   seed=78902)
topicQuality(paper_model, docs2, labels=1:ncol(paper_model$theta))
topicQuality(paper_model2, docs2, labels=1:ncol(paper_model$theta))
labelTopics(paper_model)
corr_paper <- topicCorr(paper_model)
plot.topicCorr(corr_paper)
labelTopics(paper_model2)
corr_paper2 <- topicCorr(paper_model2)
plot.topicCorr(corr_paper2)
stmBrowser(paper_model, data=meta2, c("Band", "Genre"), id="Doc_ID", labeltype="prob", 
           text="Lyrics") #I don't think you can use stmBrowser with a content covariate in the formula for the model.
plot.STM(paper_model, type="summary")
plot.STM(paper_model, type="hist")
plot.STM(paper_model2, type="summary")
plot.STM(paper_model2, type="hist")
paper_est1 <- estimateEffect(1:10 ~ Band, paper_model2, meta=meta2,
                            uncertainty="Global")
paper_est2 <- estimateEffect(1:10 ~ Genre, paper_model2, meta=meta2,
                             uncertainty="Global")
plot.estimateEffect(paper_est2, covariate="Genre", topics=c(5), model=paper_model2,
                    method="pointestimate")
plot.estimateEffect(paper_est1, covariate="Band", topics=c(5,7), model=paper_model2,
                    method="difference", cov.value1="Der Sturmer", cov.value2="Skrewdriver")
plot.STM(paper_model2, type="perspectives", covarlevels=c(4,5), topics=8)
