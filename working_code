## WS Project ##

# Marshall A. Taylor #

# Required packages.
library(NLP)
library(tm)
library(RColorBrewer)
library(SnowballC)
library(ggplot2)
library(graph)
library(grid)
library(Rgraphviz)
library(stm)
library(stmBrowser)
library(ca)
library(RWeka)
library(fastcluster)
library(pheatmap)
library(ape)
library(cluster)

# Reading in and processing data, estimating and visualizing topic models.
data <- read.csv("WS_Data_Input.csv")
data$Lyrics <- gsub("[^[:alnum:]///' ]", " ", data$Lyrics)
data2 <- data
data2$Year[data2$Year=="."] <- NA
Year <- as.numeric(as.character(data2$Year))
mean(Year[1:44], na.rm=T)
data2[23, "Year"] <- 1985
data2[40, "Year"] <- 1985
mean(Year[96:112], na.rm=T)
data2[102, "Year"] <- 2004
data2$Year <- as.numeric(as.character(data2$Year))
processed2 <- textProcessor(documents=data2$Lyrics, metadata=data2, lowercase=T, 
                           removestopwords=T, removenumbers=T, removepunctuation=T, 
                           stem=T, sparselevel=1, language="en", verbose=F, 
                           onlycharacter=F, customstopwords=NULL)
out2 <- prepDocuments(processed2$documents, processed2$vocab, 
                     processed2$meta)
docs2 <- out2$documents
vocab2 <- out2$vocab
meta2 <- out2$meta

# Selecting a model.
pot_models2 <- selectModel(docs2, vocab2, K=10, prevalence =~ Band+Genre, content =~ Band, 
                          init.type="LDA", data=meta2, runs=20,
                          seed=78902)
plotModels(pot_models2)
paper_model2 <- pot_models2$runout[[3]]
checkBeta(paper_model2, tolerance=.01) # No problem.

# Inspecting topic model solution.
paper_model <- stm(docs2, vocab2, K=10, prevalence =~ Band+Genre, 
                           init.type="LDA", data=meta2,
                           seed=78902) # Not run here.
paper_model2 <- stm(docs2, vocab2, K=10, prevalence =~ Band+Genre, content =~ Band, 
                   init.type="LDA", data=meta2,
                   seed=78902) #NR (using model above).
topicQuality(paper_model, docs2, labels=1:ncol(paper_model$theta)) #NR.
topicQuality(paper_model2, docs2, labels=1:ncol(paper_model$theta))
labelTopics(paper_model) # NR.
corr_paper <- topicCorr(paper_model) # NR.
plot.topicCorr(corr_paper) #NR.
labelTopics(paper_model2)
sageLabels(paper_model2)
topic_words <- as.matrix(labelTopics(paper_model2))
write.csv(topic_words, file="topic_words.csv")
corr_paper2 <- topicCorr(paper_model2)
plot.topicCorr(corr_paper2, vertex.color=c("gray"), vertex.label.color=c("black"))
stmBrowser(paper_model, data=meta2, c("Band", "Genre"), id="Doc_ID", labeltype="prob", 
           text="Lyrics") # NR.
plot.STM(paper_model, type="summary") #NR.
plot.STM(paper_model, type="hist") #NR.
plot.STM(paper_model2, type="summary", n=3, labeltype="prob")
plot.STM(paper_model2, type="hist")
paper_est1 <- estimateEffect(1:10 ~ Band, paper_model2, meta=meta2,
                            uncertainty="Global")
paper_est2 <- estimateEffect(1:10 ~ Genre, paper_model2, meta=meta2,
                             uncertainty="Global")
plot.estimateEffect(paper_est1, covariate="Band", topics=c(10), model=paper_model2,
                    method="pointestimate")
plot.estimateEffect(paper_est1, covariate="Band", topics=c(5,7), model=paper_model2,
                    method="difference", cov.value1="Der Sturmer", 
                    cov.value2="Skrewdriver")
plot.STM(paper_model2, type="perspectives", covarlevels=c(1,5), topics=9)

# Clustering with theta distribution.
theta <- as.matrix(paper_model2$theta)
topic_prop <- as.matrix(colSums(theta)/144)
colSums(topic_prop)
theta2 <- theta # For CA below.
theta2 <- as.data.frame(theta2) # For CA below.
pheatmap(theta, show_rownames=T, show_colnames=T, digits=3, display_numbers=F, 
         treeheight_row=90, treeheight_col=0, cluster_rows=F, cluster_cols=F, 
         clustering_method="complete", number_format="%.3f")
theta3 <- as.data.frame(theta2)
rownames(theta3)[1:44] <- paste("Band1_", 1:44, sep = "")
rownames(theta3)[45:95] <- paste("Band2_", 1:51, sep = "")
rownames(theta3)[96:112] <- paste("Band3_", 1:17, sep = "")
rownames(theta3)[113:122] <- paste("Band4_", 1:10, sep = "")
rownames(theta3)[123:144] <- paste("Band5_", 1:22, sep = "")
theta_clust <- hclust(dist(theta3), method="ward.D2")
par(mfrow=c(2,2))
sil <- silhouette(cutree(theta_clust, k=2), dist(theta3))
plot(sil, cex.names=.6, main="k=2", col=c("#A52A2A", "#8B4513"))
sil2 <- silhouette(cutree(theta_clust, k=4), dist(theta3))
plot(sil2, cex.names=.6, main="k=4", col=c("#A52A2A", "#8B4513", "#00008B", "#008000"))
sil3 <- silhouette(cutree(theta_clust, k=7), dist(theta3))
plot(sil3, cex.names=.6, main="k=7", col=mypal)
sil4 <- silhouette(cutree(theta_clust, k=9), dist(theta3))
plot(sil4, cex.names=.6, main="k=9", col=c("#A52A2A", "#8B4513",
                                                                  "#00008B", "#008000",
                                                                  "#778899", "#008080",
                                                                  "#FF6347", "#FF00FF",
                                                                  "#006400"))
clus <- cutree(theta_clust, k=2)
mypal = c("#A52A2A", "#8B4513", "#00008B", "#008000", 
          "#778899", "#008080", "#FF6347")
mypal2 = c("#A52A2A", "#008080","#00008B")
par(mfrow=c(1,1))
par(mar=c(0,0,0,0))
plot(as.phylo(theta_clust), type="fan", tip.color=mypal2[clus], 
     edge.color="black", cex=.5, font=2.5)
par(mar=c(5.1,4.1,4.1,2.1))

# CA.
rownames(theta2)[1:44] <- paste("AA_", 1:44, sep = "")
rownames(theta2)[45:95] <- paste("BB_", 1:51, sep = "")
rownames(theta2)[96:112] <- paste("CC_", 1:17, sep = "")
rownames(theta2)[113:122] <- paste("DD_", 1:10, sep = "")
rownames(theta2)[123:144] <- paste("EE_", 1:22, sep = "")
colnames(theta2) <- paste("Topic", 1:10, sep=" ")
plot(ca(theta2), labels=c(1,1))
thetaCA <- ca(theta2)
print(thetaCA)
summary(thetaCA)

# N-grams.
options(mc.cores=1)
TriGramTokenizer <- function(x) NGramTokenizer(x, Weka_control(min=3, max=3))
exp <- as.data.frame(data2$Lyrics)
corp <- Corpus(DataframeSource(exp))
Ngrams <- TermDocumentMatrix(corp, 
                              control = list(tokenize = TriGramTokenizer))
Trigrams <- as.matrix(Ngrams)
TrigramF <- sort(rowSums(as.matrix(Trigrams)), decreasing=T)
TrigramW <- data.frame(trigrams=names(TrigramF), freq=TrigramF)
write.csv(Trigrams, file="WS_trigrams.csv")
write.csv(TrigramW, file="WS_trigrams_byfreq.csv")
plot(Ngrams, terms=findFreqTerms(Ngrams, lowfreq=5) [1:15], corThreshold=0.1)
